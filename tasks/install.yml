---
- name: Check if previous deployment exists
  stat:
    path: "{{ deploy_directory }}"
  register: previous_deployment

- name: Ensure backup directory exists
  file:
    path: "{{ backup_directory }}"
    state: directory

- name: Backup previous deployment
  archive:
    path: "{{ deploy_directory }}"
    dest: "{{ backup_directory }}/{{ lookup('pipe','date +%Y-%m-%d_%H-%M-%S') }}.tgz"
  changed_when: false
  when: previous_deployment.stat.exists

- name: Stop running project instance in pm2
  command: 'pm2 stop {{ pm2_project_name }}'
  failed_when: false

- name: Clone / update the repository
  git:
    repo: 'https://github.com/sc2pte/backend.git'
    dest: '{{ deploy_directory }}'
    depth: 1
    force: true

- name: Set environment variables
  lineinfile:
    dest: /etc/environment
    regexp: "^{{ item.name }}="
    line: "{{ item.name }}={{ item.value }}"
    state: present
  with_items:
    - name: "NODE_ENV"
      value: "{{ NODE_ENV }}"
    - name: "SC2PTE_NODE_ENV"
      value: "{{ SC2PTE_NODE_ENV }}"
    - name: "SC2PTE_NODE_PORT"
      value: "{{ SC2PTE_NODE_PORT }}"
    - name: "SC2PTE_URL_PREFIX"
      value: "{{ SC2PTE_URL_PREFIX }}"
    - name: "SC2PTE_SAS_URL"
      value: "{{ SC2PTE_SAS_URL }}"
    - name: "SC2PTE_SAS_STATUS_ENDPOINT"
      value: "{{ SC2PTE_SAS_STATUS_ENDPOINT }}"
    - name: "SC2PTE_REDIS_ENABLE"
      value: "{{ SC2PTE_REDIS_ENABLE }}"
    - name: "SC2PTE_REDIS_HOST"
      value: "{{ SC2PTE_REDIS_HOST }}"
    - name: "SC2PTE_REDIS_PORT"
      value: "{{ SC2PTE_REDIS_PORT }}"
    - name: "SC2PTE_REDIS_PASSWORD"
      value: "{{ SC2PTE_REDIS_PASSWORD }}"
    - name: "SC2PTE_REDIS_DB"
      value: "{{ SC2PTE_REDIS_DB }}"
    - name: "SC2PTE_REDIS_CACHE_SEGMENT"
      value: "{{ SC2PTE_REDIS_CACHE_SEGMENT }}"
    - name: "SC2PTE_REDIS_TTL"
      value: "{{ SC2PTE_REDIS_TTL }}"
    - name: "SC2PTE_MONGODB_CONNECTION_STRING"
      value: "{{ SC2PTE_MONGODB_CONNECTION_STRING }}"
    - name: "SC2PTE_TWITCH_EXTENSION_CLIENT_SECRET"
      value: "{{ SC2PTE_TWITCH_EXTENSION_CLIENT_SECRET }}"
    - name: "SC2PTE_CLOUDFLARE_ENABLE"
      value: "{{ SC2PTE_CLOUDFLARE_ENABLE }}"
    - name: "SC2PTE_CLOUDFLARE_API_TOKEN"
      value: "{{ SC2PTE_CLOUDFLARE_API_TOKEN }}"
    - name: "SC2PTE_CLOUDFLARE_ZONE_ID"
      value: "{{ SC2PTE_CLOUDFLARE_ZONE_ID }}"
    - name: "SC2PTE_CLOUDFLARE_PRODUCTION_DOMAIN"
      value: "{{ SC2PTE_CLOUDFLARE_PRODUCTION_DOMAIN }}"
    - name: "SC2PTE_ENABLE_TWITCH_EXT_ONAUTHORIZED"
      value: "{{ SC2PTE_ENABLE_TWITCH_EXT_ONAUTHORIZED }}"
    - name: "SC2PTE_MAXIMUM_PROFILE_COUNT"
      value: "{{ SC2PTE_MAXIMUM_PROFILE_COUNT }}"
  notify: Reload environment variables
  become: true

- name: Remove node_modules directory
  file:
    path: '{{ deploy_directory }}/node_modules'
    state: absent

- name: Install packages
  npm:
    path: '{{ deploy_directory }}'

- name: Build project
  command: 'npm run build --prefix {{ deploy_directory }}'

- name: Delete running project instance from pm2
  command: 'pm2 delete {{ pm2_project_name }}'
  failed_when: false

- name: Start project in pm2
  command: 'pm2 start {{ deploy_directory }}/scripts/start.js -i max --name {{ pm2_project_name }} --watch --update-env -f'

- name: Setup configuration as startup script
  command: 'env PATH=$PATH:/usr/bin /usr/lib/node_modules/pm2/bin/pm2 startup systemd -u lwoo --hp /home/lwoo'
  become: true